class Solution:
    def findTargetSumWays(self, nums: List[int], target: int) -> int:
        return self.totalSum(nums,target,0,{})
    
    def totalSum(self,nums,target,currentIndex,memo):
        if(currentIndex >= len(nums) and target != 0):
            return 0
        if(currentIndex >= len(nums) and target == 0):
            return 1
        
        currentKey = str(currentIndex) +";"+ str(target)
        
        if currentKey in memo:
            return memo[currentKey]
        
        addsum = self.totalSum(nums,target-nums[currentIndex],currentIndex+1,memo)
        subsum = self.totalSum(nums,target+nums[currentIndex],currentIndex+1,memo)
        
        memo[currentKey] = addsum+subsum
        return addsum+subsum
